{"uid":"2223abb1f95657d","name":"test_steps","fullName":"tests.test_simplesteps#test_steps","historyId":"c4c2bd9461b1fe966f68e3fd889146e8","time":{"start":1738316562092,"stop":1738316562092,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55be0e787dca <unknown>\n#1 0x55be0e27e3f0 <unknown>\n#2 0x55be0e2b547a <unknown>\n#3 0x55be0e2b19b6 <unknown>\n#4 0x55be0e2feca6 <unknown>\n#5 0x55be0e2fe2f6 <unknown>\n#6 0x55be0e2f2833 <unknown>\n#7 0x55be0e2bf5a0 <unknown>\n#8 0x55be0e2c0ece <unknown>\n#9 0x55be0e751bdb <unknown>\n#10 0x55be0e755b67 <unknown>\n#11 0x55be0e73d3bc <unknown>\n#12 0x55be0e756727 <unknown>\n#13 0x55be0e72174f <unknown>\n#14 0x55be0e776938 <unknown>\n#15 0x55be0e776b00 <unknown>\n#16 0x55be0e786c46 <unknown>\n#17 0x7f44e969ca94 <unknown>\n#18 0x7f44e9729c3c <unknown>","statusTrace":"@pytest.fixture(scope='session', autouse=True)\n    def browser_management():\n        browser.config.window_width = 1920\n        browser.config.window_height = 1080\n>       browser.open(\"https://github.com\")\n\nconftest.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/_browser.py:93: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py:263: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py:178: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py:305: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py:129: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py:66: in build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:250: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:342: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe3a178d390>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55be0e786c46 \\\\u003Cunknown>\\\\n#17 0x7f44e969ca94 \\\\u003Cunknown>\\\\n#18 0x7f44e9729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55be0e787dca <unknown>\nE       #1 0x55be0e27e3f0 <unknown>\nE       #2 0x55be0e2b547a <unknown>\nE       #3 0x55be0e2b19b6 <unknown>\nE       #4 0x55be0e2feca6 <unknown>\nE       #5 0x55be0e2fe2f6 <unknown>\nE       #6 0x55be0e2f2833 <unknown>\nE       #7 0x55be0e2bf5a0 <unknown>\nE       #8 0x55be0e2c0ece <unknown>\nE       #9 0x55be0e751bdb <unknown>\nE       #10 0x55be0e755b67 <unknown>\nE       #11 0x55be0e73d3bc <unknown>\nE       #12 0x55be0e756727 <unknown>\nE       #13 0x55be0e72174f <unknown>\nE       #14 0x55be0e776938 <unknown>\nE       #15 0x55be0e776b00 <unknown>\nE       #16 0x55be0e786c46 <unknown>\nE       #17 0x7f44e969ca94 <unknown>\nE       #18 0x7f44e9729c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_management","time":{"start":1738316554739,"stop":1738316561967,"duration":7228},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55be0e787dca <unknown>\n#1 0x55be0e27e3f0 <unknown>\n#2 0x55be0e2b547a <unknown>\n#3 0x55be0e2b19b6 <unknown>\n#4 0x55be0e2feca6 <unknown>\n#5 0x55be0e2fe2f6 <unknown>\n#6 0x55be0e2f2833 <unknown>\n#7 0x55be0e2bf5a0 <unknown>\n#8 0x55be0e2c0ece <unknown>\n#9 0x55be0e751bdb <unknown>\n#10 0x55be0e755b67 <unknown>\n#11 0x55be0e73d3bc <unknown>\n#12 0x55be0e756727 <unknown>\n#13 0x55be0e72174f <unknown>\n#14 0x55be0e776938 <unknown>\n#15 0x55be0e776b00 <unknown>\n#16 0x55be0e786c46 <unknown>\n#17 0x7f44e969ca94 <unknown>\n#18 0x7f44e9729c3c <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python_qa_hw10/python_qa_hw10/conftest.py\", line 8, in browser_management\n    browser.open(\"https://github.com\")\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/_browser.py\", line 93, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 263, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 178, in get\n    driver = config.driver\n             ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 305, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 129, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 66, in build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 250, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 342, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_simplesteps"},{"name":"host","value":"fv-az802-788"},{"name":"thread","value":"2289-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_simplesteps"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2223abb1f95657d.json","parameterValues":[]}